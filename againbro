local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- The MeshPart asset ID to load
local assetId = 99502447592511

-- Function to insert the MeshPart into ReplicatedStorage
local function loadMeshPart(assetId)
    local success, objects = pcall(function()
        return game:GetObjects("rbxassetid://" .. assetId)
    end)

    if success and objects then
        local meshPart = objects[1] -- Assuming the first object is the MeshPart
        if meshPart and meshPart:IsA("MeshPart") then
            meshPart.Parent = ReplicatedStorage -- Insert it into ReplicatedStorage
            return meshPart
        else
            warn("No valid MeshPart found in the asset.")
            return nil
        end
    else
        warn("Failed to load asset with ID: " .. assetId)
        return nil
    end
end

-- Function to attach the MeshPart and make the player invisible, including removing the face
local function attachAndHide(meshPart)
    -- Wait for the character and HumanoidRootPart to load
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    -- Parent the mesh part to the character
    meshPart.Parent = character
    meshPart.Anchored = false -- Ensure it's not anchored
    meshPart.CanCollide = false -- Ensure it doesn't collide with other objects

    -- Create a WeldConstraint to attach the mesh to the HumanoidRootPart
    local weld = Instance.new("WeldConstraint")
    weld.Part0 = humanoidRootPart
    weld.Part1 = meshPart

    -- Set the CFrame of the mesh part to match the HumanoidRootPart's position
    -- Correcting the rotation to make the part face the front
    local desiredRotation = CFrame.Angles(0, math.rad(0), 0)  -- Rotate 180 degrees around Y-axis to face forward
    local offset = CFrame.new(0, 1, 0)  -- Offset to position the part above the HRP
    meshPart.CFrame = humanoidRootPart.CFrame * offset * desiredRotation

    -- Parent the WeldConstraint to the HumanoidRootPart
    weld.Parent = humanoidRootPart

    -- Make the original character parts invisible and non-collidable
    for _, part in pairs(character:GetDescendants()) do
        if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
            part.Transparency = 1 -- Make invisible
            part.CanCollide = false -- Disable collision
        end
    end

    -- Remove the face decal from the head
    local head = character:FindFirstChild("Head")
    if head then
        local face = head:FindFirstChildOfClass("Decal")
        if face then
            face:Destroy() -- Remove the face decal
        end
    end

    -- Ensure the mesh is visible and correctly attached
    meshPart.Transparency = 0 -- Make sure the mesh is visible
end

-- Load the MeshPart from asset ID and attach it to the character
local meshPart = loadMeshPart(assetId)
if meshPart then
    attachAndHide(meshPart)
end

-- Attach mesh and hide character when respawned
player.CharacterAdded:Connect(function(char)
    character = char
    local meshPart = loadMeshPart(assetId)
    if meshPart then
        attachAndHide(meshPart)
    end
end)
